---
description: 
globs: 
alwaysApply: true
---
## Task Execution Guidelines

### When to Use Workflow Tools
- **Simple tasks**: Handle directly without tools (e.g., basic calculations, straightforward code edits, simple explanations)
- **Complex tasks**: Always use `workflow_guidance` for multi-step problems, tasks requiring coordination across files, or when explicit planning would help

### Dynamic Workflow System
The workflow system is now fully dynamic and schema-driven:

1. **Workflow Discovery**: The system automatically discovers available workflows from `.workflow-commander/workflows/` directory
2. **Agent Choice**: You choose which workflow to use based on the task requirements - no automated scoring
3. **Schema-Driven Navigation**: Workflow transitions are determined by the YAML schema (`next_allowed_nodes` and `next_allowed_workflows`)
4. **Context Parameters**: Control workflow execution using context like `context="choose: node_name"` or `context="workflow: Workflow Name"`

### Workflow Execution Process
1. **Initialize**: When using `workflow_guidance`, the system will present available workflows for your selection
2. **Choose Workflow**: Select the most appropriate workflow based on task description and workflow goals
3. **Follow Schema**: Navigate through workflow nodes using the transitions defined in the YAML schema
4. **Agent Decisions**: Make routing decisions based on schema-presented options rather than hardcoded logic
5. **Stay Synchronized**: The workflow state file tracks your progress through the chosen workflow

### Available Tools
- `workflow_guidance`: Main tool for dynamic workflow execution with agent-driven workflow selection
- `workflow_state`: Tool for checking and updating workflow state
- Context7: Use for up-to-date documentation about technologies
- GitHub: Read files from other repositories when needed

### Key Principles
- **No hardcoded routing**: All workflow behavior is determined by YAML schema definitions
- **Agent-driven selection**: You choose workflows and transitions based on schema-presented options
- **Schema as source of truth**: Workflow definitions in YAML files drive all behavior
- **Legacy fallback preserved**: System falls back to legacy workflows when no YAML workflows are available
- If uncertain whether a task is "simple," err on the side of using the workflow tool

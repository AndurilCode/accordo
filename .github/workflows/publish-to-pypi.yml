name: 🚀 Build and Publish to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build:
    name: 📦 Build distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Ensure we have the full git history and tags for version detection
          fetch-depth: 0

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: 📋 Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: 🔍 Install dependencies
        run: uv sync --all-extras

      - name: 🏷️ Update version from release tag
        run: |
          # Extract version from tag (remove 'v' prefix if present)
          VERSION="${GITHUB_REF#refs/tags/}"
          VERSION="${VERSION#v}"
          echo "Release version: $VERSION"
          
          # Validate version format (basic semver check)
          if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)*$ ]]; then
            echo "❌ Invalid version format: $VERSION"
            echo "Expected format: X.Y.Z or X.Y.Z-suffix (e.g., 1.0.0, 1.0.0-beta1)"
            exit 1
          fi
          
          # Update version in pyproject.toml
          sed -i "s/^version = .*/version = \"$VERSION\"/" pyproject.toml
          
          # Verify the change
          echo "✅ Updated pyproject.toml version:"
          grep "^version = " pyproject.toml

      - name: 📦 Build source distribution and wheel
        run: uv build

      - name: 🔍 Verify package contents
        run: uv run twine check dist/*

      - name: 📂 Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: 🌍 Publish to PyPI
    if: github.event.release.prerelease == false  # Only publish non-prerelease versions
    needs: build
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: 📥 Download all the distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: 🚀 Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1